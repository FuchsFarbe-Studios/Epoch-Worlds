@page "/Manual/Language/Create"
@page "/Manual/Language/C"
@using EpochApp.Shared.Services
@inherits RequestComponent<EpochApp.Shared.Services.LangOptions>

<FlatTypo Typo="Typo.Heading3" Color="FlatColor.Info">Create Language</FlatTypo>
<EditForm Model="@Model" OnSubmit="@(async ctx => await SubmitOptionsAsync(ctx))">
	<DataAnnotationsValidator />
	<ValidationSummary />
	<FlatTextInput @bind-Value="@Model.LangName" Required="true" Placeholder="Language Name" Label="Language Name" />
	<FlatTextInput @bind-Value="@Model.Pronunciation" Placeholder="Pronunciation" Label="Pronunciation" />
	<FlatTypo Typo="Typo.Heading5" Color="FlatColor.Info">Phonology Options</FlatTypo>

	@if (!Model.Phonology.UseWordStructure && !Model.Phonology.UseAdvancedWordStructure)
	{
		<FlatTextInput @bind-Value="@Model.Phonology.Consonants" Label="Consonants" Placeholder="Consonants" Disabled="@(Model.Phonology.UseWordStructure || Model.Phonology.UseAdvancedWordStructure)" />
		<FlatTextInput @bind-Value="@Model.Phonology.Vowels" Label="Vowels" Placeholder="Vowels" Disabled="@(Model.Phonology.UseWordStructure || Model.Phonology.UseAdvancedWordStructure)" />
	}

	<FlatSwitchInput @bind-Value="@Model.Phonology.UseWordStructure" Label="Use Word Structure" />
	@if (Model.Phonology.UseWordStructure)
	{
		<FlatTextInput @bind-Value="@Model.Phonology.WordInitialConsonants" Label="Initial Consonants" Placeholder="Initial Consonants" />
		<FlatTextInput @bind-Value="@Model.Phonology.WordMedialConsonants" Label="Medial Consonants" Placeholder="Medial Consonants" />
		<FlatTextInput @bind-Value="@Model.Phonology.WordFinalConsonants" Label="Final Consonants" Placeholder="Final Consonants" />
		<FlatTextInput @bind-Value="@Model.Phonology.Vowels" Label="Vowels" Placeholder="Vowels" />
		<FlatSwitchInput @bind-Value="@Model.Phonology.UseHarmonicVowels" Label="Vowel Harmony" />
		@if (Model.Phonology.UseHarmonicVowels)
		{
			<FlatTextInput @bind-Value="@Model.Phonology.HarmonicVowels" Label="Harmonic Vowels" Placeholder="Harmonic Vowels" />
		}
	}

	<FlatTypo Typo="Typo.Heading6" Color="FlatColor.Info">Illegal Combinations</FlatTypo>
	<FlatTextInput @bind-Value="@Model.Phonology.IllegalOpts.IllegalCombos" Label="Illegal Combinations" Placeholder="Illegal Combinations" />
	<FlatSwitchInput @bind-Value="@Model.Phonology.IllegalOpts.BanSameVowelTwiceInARow" Label="Ban same vowel twice in a row" />
	<FlatSwitchInput @bind-Value="@Model.Phonology.IllegalOpts.BanSameSyllableTwiceInARow" Label="Ban same syllable twice in a row" />

	<FlatTypo Typo="Typo.Heading6" Color="FlatColor.Info">Vowel Options</FlatTypo>
	<FlatSwitchInput @bind-Value="@Model.Phonology.VowelOpts.UseVowelProbabilities" Label="Vowel Probabilities" Placeholder="Use Vowel Probabilities" />
	@if (Model.Phonology.VowelOpts.UseVowelProbabilities)
	{
		<FlatNumericInput TData="decimal" @bind-Value="@Model.Phonology.VowelOpts.VowelAtStart" Placeholder="Vowel probability at start of a word" Disabled="@(!Model.Phonology.VowelOpts.UseVowelProbabilities)" />
		<FlatNumericInput TData="decimal" @bind-Value="@Model.Phonology.VowelOpts.VowelAtEnd" Placeholder="Vowel probability at end of a word" Disabled="@(!Model.Phonology.VowelOpts.UseVowelProbabilities)" />
	}

	<FlatSwitchInput @bind-Value="@Model.Phonology.VowelOpts.UseVowelTones" Label="Use vowel tones" Placeholder="Use vowel tones" />
	@if (Model.Phonology.VowelOpts.UseVowelTones)
	{
		<FlatTextInput @bind-Value="@Model.Phonology.VowelOpts.VowelTones" Label="Vowel Tones" Placeholder="Vowel Tones" />
		<FlatSelectInput TValue="ToneRepresentationType" @bind-Value="@Model.Phonology.VowelOpts.ToneRepresentation" Placeholder="Tone Representation">
			@foreach (ToneRepresentationType var in Enum.GetValues(typeof(ToneRepresentationType)))
			{
				<FlatOption TValue="ToneRepresentationType" Value="@var">@var.ToDescriptionString()</FlatOption>
			}
			}
		</FlatSelectInput>
	}
	<FlatBreak />

	<FlatButtonGroup>
		<FlatButton ButtonType="ButtonType.Refresh">Reset</FlatButton>
		<FlatButton ButtonType="ButtonType.Button" Color="FlatColor.Info" OnClick="@(async e => await OutputOptionsAsync(e))">Save</FlatButton>
		<FlatButton ButtonType="ButtonType.Submit" Color="FlatColor.Success">Create Language!</FlatButton>
	</FlatButtonGroup>
</EditForm>