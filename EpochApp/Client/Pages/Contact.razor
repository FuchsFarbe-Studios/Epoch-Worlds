@page "/Contact"
@using System.Text

<MudText Typo="Typo.h3" Align="Align.Center">Contact Us</MudText>
<MudDivider DividerType="DividerType.FullWidth" />

<EditForm Model="@_model" OnSubmit="@(async ctx => await HandleContactSubmitAsync(ctx))">
	<DataAnnotationsValidator />
	<MudGrid>
		<MudItem xs="12" sm="7">
			<MudCard Outlined="true">
				<MudCardContent>
					<MudGrid>
						<MudItem xs="12" sm="4">
							<MudTextField Label="User Name" @bind-Value="@_model.UserName" For="@(() => _model.UserName)" ReadOnly="@(!string.IsNullOrWhiteSpace(Auth.CurrentUser.UserName))" />
						</MudItem>
						<MudItem xs="12" sm="4">
							<MudTextField Label="Email" @bind-Value="@_model.Email" For="@(() => _model.Email)" ReadOnly="@(!string.IsNullOrWhiteSpace(Auth.CurrentUser.Email))" />
						</MudItem>
						<MudItem xs="12" sm="4">
							<MudSelect T="ContactType" Label="Type" AnchorOrigin="Origin.BottomCenter" @bind-Value="@_model.ContactType" For="@(() => _model.ContactType)">
								@foreach (var option in Enum.GetValues<ContactType>())
								{
									<MudSelectItem Value="@option">@option.ToDescriptionString()</MudSelectItem>
								}
							</MudSelect>
						</MudItem>
						<MudItem xs="12" sm="12">
							<MudTextField FullWidth="true" Lines="3" Label="Content" @bind-Value="@_model.Message" For="@(() => _model.Message)" />
						</MudItem>
					</MudGrid>
				</MudCardContent>
				<MudCardActions>
					<MudButton ButtonType="ButtonType.Submit" DisableElevation="true" Variant="Variant.Filled" Disabled="@_submitting">
						@if (_submitting)
						{
							<MudProgressCircular Color="Color.Primary" Size="Size.Small" />
							<MudText Typo="Typo.button">Submitting...</MudText>
						}
						else
						{
							<MudText Typo="Typo.button">Submit</MudText>
						}
					</MudButton>
				</MudCardActions>
			</MudCard>
		</MudItem>
		<MudItem xs="12" sm="5">
			<MudPaper Class="pa-4 mud-height-full" Outlined="true">
				<MudText Typo="Typo.subtitle2">Validation Summary</MudText>
				@if (_success)
				{
					<MudText Color="Color.Success">Success</MudText>
				}
				else
				{
					<MudText Color="@Color.Error">
						<ValidationSummary />
						@foreach (var (error, messages) in _errorDict)
						{
							var sb = new StringBuilder();
							sb.Append(error);
							sb.Append(": ");
							sb.AppendJoin(", ", messages);
							<p>@sb.ToString()</p>
						}
					</MudText>
				}
			</MudPaper>
		</MudItem>
	</MudGrid>
</EditForm>