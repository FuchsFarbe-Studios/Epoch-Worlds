@inherits RequestComponent<ArticleEditDTO>

@if (Model != null)
{
	<EditForm Model="@Model" OnSubmit="@OnArticleSubmit">
		<DataAnnotationsValidator />
		<ValidationSummary />

		<MudTabs Border="true" Color="Color.Info" Outlined="true" Rounded="true" PanelClass="pa-2" KeepPanelsAlive="true">

			<!-- Article Content -->
			<MudTabPanel ID="@("ArticleContent")" Icon="@Icons.Material.Filled.Article" Text="Article">
				<MudText Align="Align.Center" Typo="Typo.h3">Article Information</MudText>
				<MudStack Row="true">
					<MudTextField Variant="Variant.Outlined" Label="Title" @bind-Value="@Model.Title" For="@(() => Model.Title)" MaxLength="255" Required="true" AutoFocus="true" />
					<MudSelect Variant="Variant.Outlined" T="int" Label="Category" @bind-Value="@Model.CategoryId" For="@(() => Model.CategoryId)" Required="true" Placeholder="Please choose a category for this article..." Adornment="Adornment.End" AdornmentColor="Color.Primary" AdornmentIcon="@StaticUtils.AwesomeIcons.FontDict[AwesomeIconType.Bolt]" OnAdornmentClick="@(async () => await GenerateArticleTemplateAsync())" AdornmentAriaLabel="Generate article templated sections.">
						@if (_categories.Any())
						{
							@foreach (var cat in _categories)
							{
								<MudSelectItem Value="@cat.CategoryID">@cat.Description</MudSelectItem>
							}
						}
					</MudSelect>
				</MudStack>
				<EpochMarkup @bind-MarkupString="@Model.Content" For="@(() => Model.Content)" Label="Content" />
			</MudTabPanel>

			<MudTabPanel ID="@("ArticleDetails")" Icon="@Icons.Material.Filled.Details" Text="Details">
				<MudTabs Outlined="true" Border="true" Rounded="true" Color="Color.Secondary" KeepPanelsAlive="false">
					<MudTabPanel Text="Details">
						<MudStack Spacing="1">
							<MudTextField Label="Sub Title" @bind-Value="@Model.SubTitle" For="@(() => Model.SubTitle)" Variant="Variant.Outlined" />
							<EpochMarkup Label="Excerpt" @bind-MarkupString="@Model.Excerpt" For="@(() => Model.Excerpt)" />
							<EpochMarkup Label="Mouse-Over Snippet" @bind-MarkupString="@Model.MouseOverSnippet" For="@(() => Model.MouseOverSnippet)" />
							<MudTextField Label="Icon" @bind-Value="@Model.Icon" For="@(() => Model.Icon)" Variant="Variant.Outlined" />
						</MudStack>
					</MudTabPanel>
					<MudTabPanel Text="Header Section">
						<MudStack Spacing="1">
							<MudTextField Label="Sub Heading" @bind-Value="@Model.Header.SubHeading" For="@(() => Model.Header.SubHeading)" Variant="Variant.Outlined" />
							<EpochMarkup Label="Credits" @bind-MarkupString="@Model.Header.Credits" For="@(() => Model.Header.Credits)" />
						</MudStack>
					</MudTabPanel>
					<MudTabPanel Text="Side Bar Sections">
						<MudStack Spacing="1">
							<EpochMarkup Label="Side Bar Top" @bind-MarkupString="@Model.SideBar.SideBarTop" For="@(() => Model.SideBar.SideBarTop)" />
							<EpochMarkup Label="Side Bar Top Content" @bind-MarkupString="@Model.SideBar.SideBarTopContent" For="@(() => Model.SideBar.SideBarTopContent)" />
							<EpochMarkup Label="Side Bar Bottom" @bind-MarkupString="@Model.SideBar.SideBarBottom" For="@(() => Model.SideBar.SideBarBottom)" />
							<EpochMarkup Label="Side Bar Bottom Content" @bind-MarkupString="@Model.SideBar.SideBarBottomContent" For="@(() => Model.SideBar.SideBarBottomContent)" />
							<MudSwitch @bind-Value="@Model.SideBar.DisplaySidebar" For="@(() => Model.SideBar.DisplaySidebar)" Label="Display Side Bar" Color="Color.Primary" />
						</MudStack>
					</MudTabPanel>
					<MudTabPanel Text="Footer Sections">
						<MudStack Spacing="1">
							<EpochMarkup Label="Footnotes" @bind-MarkupString="@Model.Footer.Footnotes" For="@(() => Model.Footer.Footnotes)" />
							<EpochMarkup Label="Footer Content" @bind-MarkupString="@Model.Footer.FooterContent" For="@(() => Model.Footer.FooterContent)" />
						</MudStack>
					</MudTabPanel>
				</MudTabs>
			</MudTabPanel>

			<!-- Article Sections -->
			<MudTabPanel ID="@("ArticleSections")" Icon="@Icons.Material.Filled.LibraryBooks" Text="Sections">
				<MudText Align="Align.Center" Typo="Typo.h3">Article Sections</MudText>
				<MudGrid Spacing="2">
					<MudItem xs="12">
						<MudExpansionPanels>
							@if (Model.Sections.Any())
							{
								@foreach (var sec in Model.Sections)
								{
									var secTemplate = _templateSections.FirstOrDefault(x => x.SectionName == sec.Title);
									<MudExpansionPanel @key=@sec Dense="true">
										<TitleContent>@sec.Title</TitleContent>
										<ChildContent>
											<MudGrid>
												<AuthorizeView Roles="ADMIN,INTERNAL" Context="SecAuthCtx">
													<Authorized>
														<MudItem xs="12" md="6">
															<MudTextField Adornment="@Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Warning" AdornmentColor="Color.Warning" Label="Section Id" @bind-Value="@sec.SectionId" For="@(() => sec.SectionId)" ReadOnly="true" />
														</MudItem>
													</Authorized>
												</AuthorizeView>

												<MudItem xs="12" sm="6">
													@if (secTemplate != null)
													{
														<MudTextField @bind-Value="@sec.Title" For="@(() => sec.Title)" Label="@secTemplate.SectionName" />
													}
													else
													{
														<MudTextField @bind-Value="@sec.Title" For="@(() => sec.Title)" Label="Section Header" />
													}
												</MudItem>
												<MudItem xs="12">
													@if (secTemplate != null)
													{
														<EpochMarkup @bind-MarkupString="@sec.Content" For="@(() => sec.Content)" Label="@secTemplate.SectionName" HelpText="@secTemplate.Description" />
													}
													else
													{
														<EpochMarkup @bind-MarkupString="@sec.Content" For="@(() => sec.Content)" Label="Section Content" />
													}
												</MudItem>
												<MudItem xs="12">
													<MudPaper Class="mt-2" Outlined="true" Width="100%">
														<MudToolBar Dense="false" DisableGutters="false" WrapContent="true">
															<MudSpacer />
															<MudTooltip Text="Saves your data to the database.">
																<MudButton OnClick="@(async () => await DeleteSectionAsync(sec))" Color="Color.Error" Size="Size.Small" IconColor="Color.Error" ButtonType="ButtonType.Button" EndIcon="@(Icons.Material.Filled.Delete)">Delete</MudButton>
															</MudTooltip>
														</MudToolBar>
													</MudPaper>
												</MudItem>
											</MudGrid>
										</ChildContent>
									</MudExpansionPanel>
								}
							}
						</MudExpansionPanels>
						<MudButton FullWidth="true" OnClick="@AddArticleSectionAsync" Variant="Variant.Text" EndIcon="@Icons.Material.Filled.AddCircle" IconColor="Color.Primary" ButtonType="ButtonType.Button" Color="Color.Primary">Add Section</MudButton>
					</MudItem>

				</MudGrid>

			</MudTabPanel>

			<MudTabPanel ID="@("ArticlePreferences")" Icon="@Icons.Material.Filled.Settings" Text="Preferences">
				<MudStack>
					<MudSwitch Color="Color.Primary" @bind-Value="@Model.IsPublished" For="@(() => Model.IsPublished)" Label="@($"{(Model.IsPublished ? "Published" : "Unpublished")}")" />
					<MudSwitch Color="Color.Primary" @bind-Value="@Model.IsPublic" For="@(() => Model.IsPublic)" Label="@($"{(Model.IsPublic ? "Public" : "Private")}")" />
					<MudSwitch Color="Color.Primary" @bind-Value="@Model.IsWorkInProgress" For="@(() => Model.IsWorkInProgress)" Label="@($"{(Model.IsWorkInProgress ? "Work in Progress" : "Complete!")}")" />
					<MudSwitch Color="Color.Primary" @bind-Value="@Model.IsNSFW" For="@(() => Model.IsNSFW)" Label="@($"{(Model.IsNSFW ? "Not safe for work" : "Safe for work")}")" />
					<MudSwitch Color="Color.Primary" @bind-Value="@Model.ShowTableOfContents" For="@(() => Model.ShowTableOfContents)" Label="@($"{(Model.ShowTableOfContents ? "Display Table of Contents" : "No Table of Contents")}")" />
					<MudSwitch Color="Color.Primary" @bind-Value="@Model.ShowInTableOfContents" For="@(() => Model.ShowInTableOfContents)" Label="@($"{(Model.ShowInTableOfContents ? "Show in World Table of Contents" : "Do not display in World Table of Contents")}")" />
				</MudStack>
			</MudTabPanel>

		</MudTabs>

		<MudPaper Class="mud-theme-dark mt-2" Outlined="true" Width="100%">
			<MudToolBar Dense="false" DisableGutters="false" WrapContent="true">
				<MudButton Color="Color.Inherit" Disabled="@(!IsEditMode)" Size="Size.Large" IconColor="@(IsEditMode ? Color.Warning : Color.Default)" StartIcon="@(Model.IsPublished ? Icons.Material.Filled.Visibility : Icons.Material.Filled.VisibilityOff)" OnClick="@(() => Model.IsPublished = !Model.IsPublished)">Publish</MudButton>
				<MudSpacer />
				<MudTooltip Text="Saves your data to the database.">
					<MudButton Color="Color.Inherit" Class="mr-5" Size="Size.Large" IconColor="Color.Primary" ButtonType="ButtonType.Submit" StartIcon="@($"{StaticUtils.AwesomeIcons.FontDict[AwesomeIconType.FloppyDisk]}")">Save</MudButton>
				</MudTooltip>
			</MudToolBar>
		</MudPaper>

	</EditForm>
}