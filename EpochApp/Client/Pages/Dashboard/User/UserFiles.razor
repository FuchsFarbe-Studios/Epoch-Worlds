@page "/User/Files"
@using Typo=MudBlazor.Typo
@using EpochApp.Client.Services
@using MudBlazor

<PageTitle>@StaticUtils.Constants.AppName - @Auth.CurrentUser.UserName - Files</PageTitle>

<MudText Typo="Typo.h3" Align="Align.Center">User Files</MudText>

<MudTabs Outlined="true" Border="true" Color="Color.Tertiary" Rounded="true" TabPanelClass="pa-2" Class="mt-1">
	<MudTabPanel Text="User Files" ID="@("UserFiles")" OnClick="@OnUserTabSelected">
		<MudGrid Spacing="2">

			<MudItem xs="12" md="4">
				<MudPaper Width="100%" Outlined="true">
					<UserFileUpload />
				</MudPaper>
			</MudItem>

			<MudItem xs="12" md="8">
				<MudPaper Width="100%" Outlined="true">
					<MudGrid>
						@foreach (var file in _files)
						{
							<MudItem xs="12" sm="6" md="4">
								<FileCard UserFile="@file" />
							</MudItem>
						}
					</MudGrid>
				</MudPaper>
			</MudItem>

		</MudGrid>
	</MudTabPanel>

	<MudTabPanel Text="Active World Files" ID="@("WorldFiles")" OnClick="@OnWorldTabSelected">
		<MudGrid Spacing="4">

			<MudItem xs="12" md="4">
				<MudPaper Width="100%" Outlined="true">
					<UserFileUpload IsWorldFile="true" />
				</MudPaper>
			</MudItem>

			<MudItem xs="12" md="8">
				<MudPaper Width="100%" Outlined="true">
					<MudGrid>
						@foreach (var file in _files)
						{
							<MudItem xs="12" sm="6" md="4">
								<FileCard UserFile="@file" />
							</MudItem>
						}
					</MudGrid>
				</MudPaper>
			</MudItem>

		</MudGrid>
	</MudTabPanel>
</MudTabs>

@code{
	private bool _editMode { get; set; } = false;
	private List<UserFileDTO> _files { get; set; } = new List<UserFileDTO>();

	[CascadingParameter] private UserWorldDTO ActiveWorld { get; set; }
	[Inject] private IWorldService WorldService { get; set; }
	[Inject] private HttpClient Client { get; set; }
	[Inject] private EpochAuthProvider Auth { get; set; }

	/// <inheritdoc />
	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();
		if (Auth != null && Auth.CurrentUser != null)
			_files = await Client.GetFromJsonAsync<List<UserFileDTO>>($"api/v1/UserFiles/UserFiles/{Auth.CurrentUser.UserID}");
	}

	private async Task OnUserTabSelected(MouseEventArgs arg)
	{
		_files = await Client.GetFromJsonAsync<List<UserFileDTO>>($"api/v1/UserFiles/UserFiles/{Auth.CurrentUser.UserID}");
	}

	private async Task OnWorldTabSelected(MouseEventArgs arg)
	{
		_files = await Client.GetFromJsonAsync<List<UserFileDTO>>($"api/v1/UserFiles/WorldFiles/{Auth.CurrentUser.UserID}/{ActiveWorld.WorldId}");
	}
}