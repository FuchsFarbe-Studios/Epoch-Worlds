@page "/Internal/Configuration/Phonemes"
@attribute [Authorize(Roles = "ADMIN")]

<MudText Align="Align.Center" Typo="Typo.h3">Configure Phonemes</MudText>

<MudTabs Border="true" Outlined="true" TabPanelClass="pa-2" KeepPanelsAlive="true" Rounded="true">

	<!-- Consonants -->
	<MudTabPanel Text="Consonants" ID="@("Consonants")">

		<MudText Align="Align.Center">Consonants</MudText>
		<MudDivider DividerType="DividerType.Middle" />

		<MudPaper Width="100%" Class="pa-2" Outlined="true">

			<MudGrid>
				<MudItem xs="12" sm="9">
					<MudDataGrid Virtualize="true" Outlined="true" Height="1000px" T="Consonant" Items="@_consonants" EditMode="DataGridEditMode.Form" CommittedItemChanges="@CommitConsonantChangesAsync" EditTrigger="DataGridEditTrigger.Manual" Dense="true" Bordered="true" ReadOnly="false" Elevation="0" Hover="true" Striped="true">
						<Columns>
							<PropertyColumn Property="x => x.PhonemeId" Resizable="true" Title="Id" IsEditable="false" />
							<PropertyColumn Property="x => x.PhonemeChar" Resizable="true" Title="Phoneme" />
							<PropertyColumn Property="x => x.AudioFile" Resizable="true" />
							<PropertyColumn Property="x => x.Manner">
								<EditTemplate Context="cCtx">
									<MudSelect T="ConsonantManner" @bind-Value="@cCtx.Item.Manner" For="@(() => cCtx.Item.Manner)" Label="Depth">
										@foreach (var manner in Enum.GetValues<ConsonantManner>())
										{
											<MudSelectItem Value="@manner">@manner.ToDescriptionString()</MudSelectItem>
										}
									</MudSelect>
								</EditTemplate>
							</PropertyColumn>
							<PropertyColumn Property="x => x.Place">
								<EditTemplate Context="cCtx">
									<MudSelect T="ConsonantPlace" @bind-Value="@cCtx.Item.Place" For="@(() => cCtx.Item.Place)">
										@foreach (var place in Enum.GetValues<ConsonantPlace>())
										{
											<MudSelectItem Value="@place">@place.ToDescriptionString()</MudSelectItem>
										}
									</MudSelect>
								</EditTemplate>
							</PropertyColumn>
							<PropertyColumn Property="x => x.IsVoiced" Resizable="true">
								<EditTemplate Context="cCtx">
									<MudSwitch @bind-Value="@cCtx.Item.IsVoiced" For="@(() => cCtx.Item.IsVoiced)" Label="Is Voiced?" />
								</EditTemplate>
							</PropertyColumn>
							<TemplateColumn Title="Edit">
								<CellTemplate Context="editCtx">
									<MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Edit" OnClick="@editCtx.Actions.StartEditingItemAsync" />
								</CellTemplate>
							</TemplateColumn>
							<TemplateColumn Title="Delete">
								<CellTemplate Context="deleteCtx">
									<MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Delete" Color="Color.Error" OnClick="@(async () => await RemoveConsonantAsync(deleteCtx.Item))" />
								</CellTemplate>
							</TemplateColumn>
						</Columns>
					</MudDataGrid>
				</MudItem>

				<MudItem xs="12" sm="3">
					<EditForm Model="@_consonantModel" OnValidSubmit="@AddConsonantAsync">
						<MudNumericField T="int" @bind-Value="@_consonantModel.PhonemeId" For="@(() => _consonantModel.PhonemeId)" FullWidth="true" Label="Phoneme Id" ReadOnly="true" />
						<MudStack Row="true">
							<MudTextField @bind-Value="@_consonantModel.PhonemeChar" For="@(() => _consonantModel.PhonemeChar)" FullWidth="true" Label="Phoneme" MaxLength="4" Required="true" />
							<MudTextField @bind-Value="@_consonantModel.AudioFile" For="@(() => _consonantModel.AudioFile)" FullWidth="true" Label="File" MaxLength="155" />
						</MudStack>

						<MudStack Row="true">
							<MudSelect T="ConsonantPlace" @bind-Value="@_consonantModel.Place" For="@(() => _consonantModel.Place)" Required="true">
								@foreach (var place in Enum.GetValues<ConsonantPlace>())
								{
									<MudSelectItem Value="@place">@place.ToDescriptionString()</MudSelectItem>
								}
							</MudSelect>
							<MudSelect T="ConsonantManner" @bind-Value="@_consonantModel.Manner" For="@(() => _consonantModel.Manner)" Label="Depth" Required="true">
								@foreach (var manner in Enum.GetValues<ConsonantManner>())
								{
									<MudSelectItem Value="@manner">@manner.ToDescriptionString()</MudSelectItem>
								}
							</MudSelect>
						</MudStack>

						<MudStack Row="true">
							<MudCheckBox Color="Color.Primary" @bind-Value="@_consonantModel.IsVoiced" For="@(() => _consonantModel.IsVoiced)" Label="@(_consonantModel.IsVoiced ? "Voiced" : "Voiceless")" />
							<MudButton FullWidth="true" ButtonType="ButtonType.Submit" Variant="Variant.Outlined" Color="Color.Primary">Add</MudButton>
						</MudStack>
					</EditForm>
				</MudItem>

			</MudGrid>
		</MudPaper>

	</MudTabPanel>

	<!-- Vowels -->
	<MudTabPanel Text="Vowels" ID="@("Vowels")">

		<MudText Align="Align.Center">Vowels</MudText>
		<MudDivider DividerType="DividerType.Middle" />

		<MudPaper Width="100%" Class="pa-2" Outlined="true">
			<MudGrid>
				<MudItem xs="12" sm="9">
					<MudDataGrid Virtualize="true" Outlined="true" Height="1000px" T="Vowel" Items="@_vowels" EditMode="DataGridEditMode.Form" CommittedItemChanges="@CommitVowelChangesAsync" EditTrigger="DataGridEditTrigger.Manual" Dense="true" Bordered="true" ReadOnly="false" Elevation="0" Hover="true" Striped="true">
						<Columns>
							<PropertyColumn Property="x => x.PhonemeId" Resizable="true" Title="Id" IsEditable="false" />
							<PropertyColumn Property="x => x.PhonemeChar" Resizable="true" Title="Phoneme" />
							<PropertyColumn Property="x => x.AudioFile" Resizable="true" />
							<PropertyColumn Property="x => x.Depth" Title="Depth">
								<EditTemplate Context="vCtx">
									<MudSelect T="VowelDepth" @bind-Value="@vCtx.Item.Depth" For="@(() => vCtx.Item.Depth)" Label="Depth">
										@foreach (var depth in Enum.GetValues<VowelDepth>())
										{
											<MudSelectItem Value="@depth">@depth.ToDescriptionString()</MudSelectItem>
										}
									</MudSelect>
								</EditTemplate>
							</PropertyColumn>
							<PropertyColumn Property="x => x.Verticality" Title="Depth">
								<EditTemplate Context="vCtx">
									<MudSelect T="VowelVerticality" @bind-Value="@vCtx.Item.Verticality" For="@(() => vCtx.Item.Verticality)" Label="Verticality">
										@foreach (var vert in Enum.GetValues<VowelVerticality>())
										{
											<MudSelectItem Value="@vert">@vert.ToDescriptionString()</MudSelectItem>
										}
									</MudSelect>
								</EditTemplate>
							</PropertyColumn>
							<PropertyColumn Property="x => x.IsRounded" Resizable="true" Title="Rounded">
								<EditTemplate Context="vCtx">
									<MudSwitch @bind-Value="@vCtx.Item.IsRounded" For="@(() => vCtx.Item.IsRounded)" Label="Is Rounded?" />
								</EditTemplate>
							</PropertyColumn>
							<TemplateColumn Title="Edit">
								<CellTemplate Context="editCtx">
									<MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Edit" OnClick="@editCtx.Actions.StartEditingItemAsync" />
								</CellTemplate>
							</TemplateColumn>
							<TemplateColumn Title="Delete">
								<CellTemplate Context="deleteCtx">
									<MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Delete" Color="Color.Error" OnClick="@(async () => await RemoveVowelAsync(deleteCtx.Item))" />
								</CellTemplate>
							</TemplateColumn>
						</Columns>
					</MudDataGrid>
				</MudItem>

				<MudItem xs="12" sm="3">
					<EditForm Model="@_vowelModel" OnValidSubmit="@AddVowelAsync">
						<MudNumericField T="int" @bind-Value="@_vowelModel.PhonemeId" For="@(() => _vowelModel.PhonemeId)" FullWidth="true" Label="Phoneme Id" ReadOnly="true" />
						<MudStack Row="true">
							<MudTextField @bind-Value="@_vowelModel.PhonemeChar" For="@(() => _vowelModel.PhonemeChar)" FullWidth="true" Label="Phoneme" MaxLength="4" Required="true" />
							<MudTextField @bind-Value="@_vowelModel.AudioFile" For="@(() => _vowelModel.AudioFile)" FullWidth="true" Label="File" MaxLength="155" />
						</MudStack>

						<MudStack Row="true">
							<MudSelect T="VowelDepth" @bind-Value="@_vowelModel.Depth" For="@(() => _vowelModel.Depth)" Label="Depth" Required="true">
								@foreach (var depth in Enum.GetValues<VowelDepth>())
								{
									<MudSelectItem Value="@depth">@depth.ToDescriptionString()</MudSelectItem>
								}
							</MudSelect>

							<MudSelect T="VowelVerticality" @bind-Value="@_vowelModel.Verticality" For="@(() => _vowelModel.Verticality)" Label="Verticality" Required="true">
								@foreach (var vert in Enum.GetValues<VowelVerticality>())
								{
									<MudSelectItem Value="@vert">@vert.ToDescriptionString()</MudSelectItem>
								}
							</MudSelect>
						</MudStack>

						<MudStack Row="true">
							<MudCheckBox Color="Color.Secondary" @bind-Value="@_vowelModel.IsRounded" For="@(() => _vowelModel.IsRounded)" Label="Is Rounded?" />
							<MudButton FullWidth="true" ButtonType="ButtonType.Submit" Variant="Variant.Outlined" Color="Color.Primary">Add</MudButton>
						</MudStack>
					</EditForm>
				</MudItem>
			</MudGrid>
		</MudPaper>

	</MudTabPanel>

</MudTabs>