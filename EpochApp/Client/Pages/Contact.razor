@page "/Contact"
@using EpochApp.Shared.Client
<FlatTypo Typo="Typo.Heading3">Contact Us</FlatTypo>
<EditForm Model="@_model" OnSubmit="async ctx => await HandleContactSubmitAsync(ctx)">
	<FlatTextInput @bind-Value="@_model.UserName" Placeholder="@(nameof(_model.UserName))" Label="@(nameof(_model.UserName))" Floating="true" />
	<FlatTextInput @bind-Value="@_model.Email" Placeholder="@(nameof(_model.Email))" Label="@(nameof(_model.Email))" Floating="true" />
	<FlatSelectInput TValue="ContactType" @bind-Value="@_model.ContactType" Label="Contact Type" Floating="false">
		@foreach (var option in Enum.GetValues<ContactType>())
		{
			<FlatOption Value="@option">@option.ToDescriptionString()</FlatOption>
		}
	</FlatSelectInput>
	<FlatTextInput @bind-Value="@_model.Phone" Placeholder="@(nameof(_model.Phone))" Label="@(nameof(_model.Phone))" Floating="true" />
	<FlatTextArea @bind-Value="@_model.Message" Placeholder="Content" Label="Content" Floating="true" />
	<FlatButton Disabled="@_submitting" ButtonType="ButtonType.Submit">Submit</FlatButton>
</EditForm>

@code {
	private ContactDTO _model = new ContactDTO();
	private bool _submitting;

	/// <summary> Injected HttpClient </summary>
	[Inject] public HttpClient Client { get; set; }

	/// <summary> Injected ILogger </summary>
	[Inject] public ILogger<Contact> Logger { get; set; }

	private async Task HandleContactSubmitAsync(EditContext arg)
	{
		_submitting = true;
		var response = await Client.PostAsJsonAsync("api/v1/Contact", _model);
		if (!response.IsSuccessStatusCode)
			Logger.LogError("Contact form failed to submit");
		else
			Logger.LogInformation("Contact form submitted");
		_submitting = false;
	}
}