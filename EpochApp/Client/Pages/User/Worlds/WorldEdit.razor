@page "/User/Worlds/Edit/{WorldID}"
@page "/User/W/Edit/{WorldID}"
@namespace EpochApp.Client.Pages.User
@using EpochApp.Shared.Worlds
@inherits RequestComponent<EpochApp.Shared.Worlds.World>

<FlatTypo Typo="Typo.Heading3" Color="FlatColor.Info">Edit World</FlatTypo>

<EditForm Model="@Model" OnValidSubmit="@(async ctx => await UpdateWorldAsync(ctx))">
	<DataAnnotationsValidator />
	<ValidationSummary Model="@Model" />
	<FlatGrid Cols="RowCols.Cols2">
		<FlatGridItem>
			<FlatTextInput @bind-Value="@Model.WorldName" Label="World Name" Placeholder="World Name" Required="true" />
		</FlatGridItem>
		<FlatGridItem>
			<FlatTextInput @bind-Value="@Model.Pronunciation" Label="@nameof(Model.Pronunciation)" Placeholder="@($"/{nameof(Model.Pronunciation)}/")" />
		</FlatGridItem>
	</FlatGrid>

	<FlatGrid Cols="RowCols.Default">
		<FlatTextArea @bind-Value="@Model.Description" HelpText="A brief description of your world." Label="@nameof(Model.Description)" Placeholder="@nameof(Model.Description)" Lines="5" Required="true" />
	</FlatGrid>

	<FlatButton Color="FlatColor.Accent" Edge="EdgeType.RoundMd" Variant="Variant.Default" ButtonType="ButtonType.Submit" Disabled="@_isSubmitting">
		Submit
	</FlatButton>
</EditForm>

@code {
	private bool _isSubmitting;

	/// <summary>
	///     The ID of the world to edit.
	/// </summary>
	[Parameter] public string WorldID { get; set; }

	/// <inheritdoc />
	protected override async Task OnParametersSetAsync()
	{
		await base.OnParametersSetAsync();
		await GetWorldAsync();
	}

	private async Task GetWorldAsync()
	{
		var world = await Client.GetFromJsonAsync<World>($"api/v1/Worlds/{WorldID}");
		if (world != null)
			Model = world;
	}

	private async Task UpdateWorldAsync(EditContext ctx)
	{
		_isSubmitting = true;
		var result = await Client.PutAsJsonAsync<World>($"/api/v1/Worlds/{Model.WorldID}", Model);
		if (result.IsSuccessStatusCode)
			Nav.NavigateTo("/User/Worlds");
		await Task.CompletedTask;
		_isSubmitting = false;
	}
}