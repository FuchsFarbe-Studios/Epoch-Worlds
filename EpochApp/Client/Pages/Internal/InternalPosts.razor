@page "/Internal/Posts"
@using ButtonType=MudBlazor.ButtonType
@using EpochApp.Client.Services
<h3>Create Blog Post</h3>

@if (_blogs.Any())
{
	<EditForm Model="@_post" OnSubmit="@SubmitPostAsync">
		<MudCard Outlined="true">
			<MudSelect Label="Select Blog" @bind-Value="@_post.BlogId">
				@foreach (var blog in _blogs)
				{
					<MudSelectItem Value="@blog.BlogID">@blog.Name</MudSelectItem>
				}
			</MudSelect>
			<MudTextField Label="Post Title" @bind-Value="@_post.Title" />
			<MudTextField Label="Content" @bind-Value="@_post.Content" />
			<MudTextField Label="Link" @bind-Value="@_post.OutsideLink" />
			<MudDatePicker Label="Schedule" @bind-Date="_post.ScheduledTime" />
			<MudCardActions>
				<MudButton Disabled="@_loading" ButtonType="ButtonType.Submit">Submit Post</MudButton>
			</MudCardActions>
		</MudCard>
	</EditForm>
}

@code {
	private bool _loading;
	private List<BlogDTO> _blogs = new List<BlogDTO>();
	private List<PostDTO> _posts = new List<PostDTO>();
	private BlogDTO _selectedBlog;
	private PostDTO _post = new PostDTO();

	/// <summary>
	///     Injected <see cref="HttpClient" />.
	/// </summary>
	[Inject] public HttpClient Client { get; set; }

	/// <summary>
	///     Injected authentication service.
	/// </summary>
	[Inject] public EpochAuthProvider Auth { get; set; }

	/// <summary> Injected Logger. </summary>
	[Inject] public ILogger<InternalPosts> Logger { get; set; }

	/// <inheritdoc />
	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();
		_blogs = await Client.GetFromJsonAsync<List<BlogDTO>>("api/v1/Blogs");
	}

	private async Task SubmitPostAsync(EditContext arg)
	{
		_loading = true;
		var post = arg.Model as PostDTO;
		post.Author = Auth.CurrentUser.UserName;
		post.ScheduledTime ??= DateTime.Now;

		var response = await Client.PostAsJsonAsync<PostDTO>($"api/v1/Blogs/BlogPosts/{post.BlogId}", post);
		if (response.IsSuccessStatusCode)
		{
			_post = new PostDTO();
			Logger.LogInformation("Post created");
		}
		else
		{
			Logger.LogError("Post creation failed");
		}
		_loading = false;
	}
}